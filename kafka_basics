KAFKA BASIC Configuration files and start commands
=====================================================


Edit PATH to include Kafka (in ~/.bashrc for example) PATH="$PATH:/your/path/to/your/kafka/bin"

Edit Zookeeper & Kafka configs using a text editor

zookeeper.properties: dataDir=/your/path/to/data/zookeeper

server.properties: log.dirs=/your/path/to/data/kafka

Start Zookeeper in one terminal window: zookeeper-server-start.sh config/zookeeper.properties

Start Kafka in another terminal window: kafka-server-start.sh config/server.properties
================================================================================================


Go to path   bin/zookeeper-server-start.sh config/zookeeper.properties

Starting Zooker 
---------------------------

Go to path 

bin/zookeeper-server-start.sh config/zookeeper.properties

after executing if you get the  """ bin/zookeeper-server-start.sh config/zookeeper.properties """ it means it has started zooker


Starting kafka
-----------------------

kafka-server-start.sh config/server.properties

if all goes well, u can see the output INFO [KafkaServer id=0] started (kafka.server.KafkaServer)  

After starting u can see the files generated in the path   -->  /home/bandaru/kafka/kafka_2.12-2.5.0/data/kafka

recovery-point-offset-checkpoint
log-start-offset-checkpoint
cleaner-offset-checkpoint
replication-offset-checkpoint
meta.properties

-------------------------------------------------


bandaru@kmaster:~/kafka/kafka_2.12-2.5.0$ kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --partitions 3 replication-factor 2



Kafka-topics CLI
===================

creating the topic


Input command -> kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --create --partitions 3 --replication-factor 1

output -->

kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --create --partitions 3 --replication-factor 1

==============================

checking the list of topics

kafka-topics.sh --zookeeper 127.0.0.1:2181  --list

kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic 
















LINNKS
-----------

https://www.linkconsulting.com/blog/kafka-101-messages-to-non-existent-topic/




Edit PATH to include Kafka (in ~/.bashrc for example) PATH="$PATH:/your/path/to/your/kafka/bin"

Edit Zookeeper & Kafka configs using a text editor

zookeeper.properties: dataDir=/your/path/to/data/zookeeper

server.properties: log.dirs=/your/path/to/data/kafka

Start Zookeeper in one terminal window: zookeeper-server-start.sh config/zookeeper.properties

Start Kafka in another terminal window: kafka-server-start.sh config/server.properties
================================================================================================


Go to path   bin/zookeeper-server-start.sh config/zookeeper.properties

Starting Zooker 
---------------------------

Go to path 

bin/zookeeper-server-start.sh config/zookeeper.properties

after executing if you get the  """ bin/zookeeper-server-start.sh config/zookeeper.properties """ it means it has started zooker


Starting kafka
-----------------------

kafka-server-start.sh config/server.properties

if all goes well, u can see the output INFO [KafkaServer id=0] started (kafka.server.KafkaServer)  

After starting u can see the files generated in the path   -->  /home/bandaru/kafka/kafka_2.12-2.5.0/data/kafka

recovery-point-offset-checkpoint
log-start-offset-checkpoint
cleaner-offset-checkpoint
replication-offset-checkpoint
meta.properties

-------------------------------------------------


bandaru@kmaster:~/kafka/kafka_2.12-2.5.0$ kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --partitions 3 replication-factor 2



Kafka-topics CLI
===================

1. creating the topic
--------------------------


Input command -> kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --create --partitions 3 --replication-factor 1

output -->

kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --create --partitions 3 --replication-factor 1

==============================

2. checking the list of topics
-------------------------------------------

kafka-topics.sh --zookeeper 127.0.0.1:2181  --list

3. describe the topic
-----------------------------------

kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic  --describe  ---> gives the details of the topic first_topic


4. Delete the topic 
-------------------------------

 kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic  --delete


Kafka console producer CLI
------------------------------------------

For the producer to push the data , we need some changes in the   /home/bandaru/kafka/kafka_2.12-2.5.0/config/server.properties

------>   listeners=PLAINTEXT://localhost:9092
-------> advertised.listeners=PLAINTEXT://localhost:9092


kafka-console-producer.sh --broker-list 127.0.0.1:9092 --topic first_topic         ------------->  pushing the data into the topics

If you want to create a new topic directly from the producer cli like below 
-----------------------------------------------------------------------------------------------------------

kafka-console-producer.sh --broker-list 127.0.0.1:9092 --topic petti
>hello
[2020-08-06 20:48:41,491] WARN [Producer clientId=console-producer] Error while fetching metadata with correlation id 3 : {petti=LEADER_NOT_AVAILABLE} (org.apache.kafka.clients.NetworkClient)
[2020-08-06 20:48:41,603] WARN [Producer clientId=console-producer] Error while fetching metadata with correlation id 4 : {petti=LEADER_NOT_AVAILABLE} (org.apache.kafka.clients.NetworkClient)
>this 
>is peti


then if you can list the kafka-topics.sh --zookeeper 127.0.0.1:2181 --list 

if u use the producer for creating the new topic then it will create only one partition by default, if you need to change , it can be done in config/server.properties


# The default number of log partitions per topic. More partitions allow greater
# parallelism for consumption, but this will also result in more files across   
# the brokers.
num.partitions=1

CHANGE IT TO 

# The default number of log partitions per topic. More partitions allow greater
# parallelism for consumption, but this will also result in more files across
# the brokers.
num.partitions=desired number

moreover its better to change the create the topic before u produce it from producer console   



If you want to see the messages from producer to consumer in runtime , open 2 putty and then give

1. kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic petti  -- -----------> first putty

2. kafka-console-producer --broker-list 127.0.0.1:9092 --topic petti        ------------------> second putty, post the messages and u can see on first putty

if you wan to see all the messgaes then ------>  kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic petti  --from-beginning




CONSUMER GROUP
=================================

kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic first_topic --group first-topic-group

if the topic first_topic has 3 partitions, then u can open the three console, the messgaes will be distributed from the producer ---> because all the three are grouped in first-topic-group

====================================
============================================================================================================
====================================

 

bandaru@bandaru:~/kafka/kafka_2.12-2.5.0$ kafka-consumer-groups.sh --bootstrap-server localhost:9092 -list
my-first-group
first-topic-group

bandaru@bandaru:~/kafka/kafka_2.12-2.5.0$ kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group first-topic-group

Consumer group 'first-topic-group' has no active members.

GROUP             TOPIC           PARTITION  CURRENT-OFFSET  LOG-END-OFFSET  LAG             CONSUMER-ID     HOST            CLIENT-ID
first-topic-group first_topic     0          4               4               0               -               -               -
first-topic-group first_topic     1          17              17              0               -               -               -
first-topic-group first_topic     2          13              13              0               -               -               -

the above describes all the details of consumer groups


 




